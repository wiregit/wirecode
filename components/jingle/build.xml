<?xml version="1.0" encoding="UTF-8"?>

<project name="lw-jingle" basedir="." default="compile-src">

	<description>
		LimeWire component 'jingle'.
	    This component contains implementations of XMPP Jingle extensions, based on the smack API.
	</description>
	
        <import file="../common/build-macros.xml" />
        <import file="../common/build.xml"/>
        
    <property name="component" value="jingle"/>
    
    <target name="initialize" depends="lw-common.initialize" unless="initialized.jingle">
        <do.setup-properties component="${component}">
			<src-classpath>
                <pathelement location="${limewire.lib.jars}/commons-logging.jar"/>
                <pathelement location="${limewire.lib.jars}/dom4j.jar"/>
                <!--pathelement location="${limewire.lib.jars}/commons-logging-1.1.jar"/>
                <pathelement location="${limewire.lib.jars}/commons-logging-adapters-1.1.jar"/>
                <pathelement location="${limewire.lib.jars}/commons-logging-api-1.1.jar"/-->
                <pathelement location="${limewire.lib.jars}/jspeex-0.9.7-jfcom.jar"/>
                <pathelement location="${limewire.lib.jars}/Speex.jar"/>
                <pathelement location="${limewire.lib.jars}/jmf.jar"/>
                <pathelement location="${limewire.lib.jars}/jstun.jar"/>
                <pathelement location="${limewire.lib.jars}/smack.jar"/>
                <pathelement location="${limewire.lib.jars}/smackx.jar"/>
                <pathelement location="${limewire.lib.jars}/smackx-debug.jar"/>
                
                <path refid="build.limewire.components.common.buildpath"/>
			</src-classpath>
        </do.setup-properties>
    </target>
	
	<target name="clean" depends="lw-common.clean">
	    <do.clean component="${component}"/>
	</target>
    
    <target name="compile" depends="lw-common.compile">
    	<do.compile component="${component}"/>
    </target>
	
	<target name="compile-src" depends="lw-common.compile-src">
	    <do.compile-src component="${component}"/>
	</target>
    
	<target name="clean-src" depends="lw-common.clean-src">
	    <do.clean-src component="${component}"/>
	</target>
	
	<target name="compile-tests">
	    <do.compile-tests component="${component}"/>
	</target>
	
	<target name="clean-tests">
	    <do.clean-tests component="${component}"/>
	</target>
	
	<target name="test" if="class" depends="compile">
	    <do.test component="${component}" class="${class}"/>
	</target>
	
	<target name="test-package" if="package" depends="compile">
	    <do.test-package component="${component}" package="${package}"/>
	</target>
	
	<target name="test-all" depends="compile">
	    <do.test-all component="${component}"/>
	</target>
    
    <target name="jar" depends="initialize, compile-src">
        <do.jar component="${component}"/>
    </target>
    
	<target name="javadoc" depends="initialize, compile-src">
    	<do.javadoc component="${component}"/>
	</target>
    
    <target name="clean-dist" depends="initialize">
        <do.clean-dist component="${component}"/>
    </target>
	
    <target name="with.clover" depends="initialize">
        <do.clover-setup component="${component}"/>
	</target>
    
    <target name="clover2html" depends="initialize">
        <do.clover2html component="${component}"/>
    </target>
    
</project>