<?xml version="1.0" encoding="UTF-8"?>

<project name="lw-security" basedir="." default="compile-src">

	<description>
		LimeWire component 'security'.
	    This component contains security-related functions,
	    such as verifying objects are signed correctly,
	    and utilities for adding one-time pads.
	</description>
	
    <import file="../common/build-macros.xml"/>
    <import file="../common/build.xml" />
	<import file="../io/build.xml" />
	<import file="../http/build.xml" />
    
    <target name="initialize" depends="lw-common.initialize, lw-http.initialize, lw-io.initialize" unless="initialized.security">
        <do.setup-properties component="security">
			<src-classpath>
			    <path refid="build.limewire.components.io.buildpath" />
				<pathelement location="${limewire.lib.jars}/commons-logging.jar"/>
				<pathelement location="${limewire.lib.jars}/dnsjava-2.0.6.jar"/>
                <pathelement location="${limewire.lib.jars}/httpclient-4.0-beta1.jar"/>
                <pathelement location="${limewire.lib.jars}/httpcore-4.0-beta2.jar"/>
		       	<pathelement location="${limewire.lib.jars}/httpcore-nio-4.0-beta2.jar"/>
                <path refid="build.limewire.components.common.buildpath"/>
			</src-classpath>
        </do.setup-properties>
    </target>
	
	<target name="clean" depends="lw-common.clean">
	    <do.clean component="security"/>
	</target>
    
    <target name="compile" depends="lw-common.compile, lw-http.compile, lw-io.compile">
    	<do.compile component="security"/>
    </target>
	
	<target name="compile-src" depends="lw-common.compile-src, lw-http.compile-src, lw-io.compile-src">
	    <do.compile-src component="security"/>
	</target>
    
	<target name="clean-src" depends="lw-common.clean-src">
	    <do.clean-src component="security"/>
	</target>
	
	<target name="compile-tests">
	    <do.compile-tests component="security"/>
	</target>
	
	<target name="clean-tests">
	    <do.clean-tests component="security"/>
	</target>
	
	<target name="test" if="class" depends="compile">
	    <do.test component="security" class="${class}"/>
	</target>
	
	<target name="test-package" if="package" depends="compile">
	    <do.test-package component="security" package="${package}"/>
	</target>
	
	<target name="test-all" depends="compile">
	    <do.test-all component="security"/>
	</target>
    
    <target name="jar" depends="initialize, compile-src">
        <do.jar component="security"/>
    </target>
    
	<target name="javadoc" depends="initialize, compile-src">
    	<do.javadoc component="security"/>
	</target>
    
    <target name="clean-dist" depends="initialize">
        <do.clean-dist component="security"/>
    </target>
	
    <target name="with.clover" depends="initialize">
        <do.clover-setup component="security"/>
	</target>
    
    <target name="clover2html" depends="initialize">
        <do.clover2html component="security"/>
    </target>
</project>