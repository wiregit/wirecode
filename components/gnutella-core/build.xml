<project name="Gnutella" default="core" basedir=".">

<!-- set global properties for this basedir -->
<property name="basedir" value="."/>
<property name="lib" value="../lib"/>
<property name="jars" value="${lib}/jars"/>
<property name="xmlrpc" value="../../LimeXMLRPC"/>
<property name="xmlrpcsrc" value="${xmlrpc}/src/java"/>	
<property name="xmlrpclib" value="${xmlrpc}/lib"/>	
<property name="mojitosrc" value="../mojito/src/java"/>

<!-- constants -->
<property name="DEBUG" value="yes"/>  
<property name="OPTIMIZE" value="no"/>  
<property name="DEPRECATION" value="yes"/>
<property name="NOWARN" value="yes"/>

<!-- default classpath for javac.  it is set as the user's CLASSPATH
     environment with the jar files necessary for compilation appended. -->
<path id="default.classpath" >
  <fileset dir="${jars}" includes="**/*.jar"/>
</path>

<path id="xmlrpc.classpath" >
  <fileset dir="${jars}" includes="**/*.jar"/>
  <fileset dir="${xmlrpclib}" includes="**/*.jar"/>	
</path>

<!-- Initialization stuff -->
<target name="init">
    <available file="${jars}" type="dir" property="jars.present"/>
	<tstamp/>
	<antcall target="checkjars"/>
</target>

<target name="checkjars" unless="jars.present">
    <echo message="*******************************************************"/>
    <echo message="*******  YOU MUST CHECKOUT THE lib MODULE *************"/>
    <echo message="**** and place it as a sibling to this core module ****"/>
    <echo message="*******************************************************"/>
</target>

<!-- Core -->
<target name="core" depends="init">
	<javac debug="${DEBUG}" 
           optimize="${OPTIMIZE}" 
           deprecation="${DEPRECATION}"
		   srcdir="${basedir}:${mojitosrc}" 
           destdir="${basedir}"
           nowarn="${NOWARN}"
      source="1.5"
      target="1.5"
    >
    <classpath refid="default.classpath" />
    </javac>
</target>
	
<!-- xmlrpc -->
<target name="xmlrpc" depends="core">
	<javac debug="${DEBUG}" 
           optimize="${OPTIMIZE}" 
           deprecation="${DEPRECATION}"
		   srcdir="${basedir}:${xmlrpcsrc}" 
           destdir="${basedir}"
           nowarn="${NOWARN}"
      source="1.5"
      target="1.5"
    >
    <classpath refid="xmlrpc.classpath" />
    </javac>
</target>

	

<!-- CLEAN -->
<target name="clean">
	<delete>
		<fileset dir="${basedir}" includes="**/*.class,*.class" />
	</delete>
</target>

<!-- Creates a jar file from core code -->
<target name="jar" depends="clean, core">
	<delete file="lib/core.jar"/>
	<jar destfile="lib/core.jar" 
		 basedir="." 
		 excludes="**/*.java **/*.xml **/*.txt **/*.sh **/*.bat 
		 		   **/*.html **/*.jar compile run query_keys">
	</jar>
</target>
	
<!-- Creates a jar file from core code -->
<target name="xmlrpcjar" depends="clean, xmlrpc">
	<delete file="lib/remotecore.jar"/>
	<jar destfile="lib/remotecore.jar" 
		 basedir="." 
		 includes="com/**, de/**"
		 excludes="**/*.java **/*.xml **/*.txt **/*.sh **/*.bat 
		 		   **/*.html **/*.jar compile run query_keys"
	     filesonly="true">
		 <manifest>
            <attribute name="Main-Class" value="com.limegroup.gnutella.xmlrpc.server.RemoteMain"/>
            <attribute name="Class-Path" value=". xerces.jar jl011.jar logicrypto.jar commons-logging.jar commons-httpclient.jar commons-net.jar commons-pool.jar xmlrpc-client-3.0rc1.jar xmlrpc-common-3.0rc1.jar xmlrpc-server-3.0rc1.jar ws-commons-util-1.0.1.jar commons-httpclient-3.0.1.jar log4j.jar i18n.jar icu4j.jar id3v2.jar mp3sp14.jar clink.jar daap.jar jdic.jar je.jar jcraft.jar core.jar remotecore.jar livenodes log4j.properties"/>
         </manifest>
	</jar>
</target>

</project>













