------------------ DONE
core/com/limegroup/gnutella/DownloadManager.java
   ***I'm not sure I like passing the original query string as an
      argument to getFile after all DONE 
   ***in handleQueryReply, don't catch Exception e.  Same in canonicalize. DONE
   ***need synchronization for handleQueryReply DONE
   ***in handleQueryReply, you shouldn't add rfd to more than one
      downloader.  (This is easiest to implement if you re-order loops.) DONE
   ***canonicalization should remove ALL non-alphanumeric characters. DONE

core/com/limegroup/gnutella/Downloader.java
   ***why bother with REQUERYING_NETWORK if we've got WAITING_FOR_RESULTS DONE

core/com/limegroup/gnutella/QueryReply.java
   ***remove arg to calculateQueryReply.  Document. DONE
   ***get rid of catch Exception e DONE
   ***Don't write "modified by..." at top of file DONE
 
core/com/limegroup/gnutella/RouterService.java
   *** why is sendQRToDownloadManager public? DONE
 
------------------ PENDING
core/com/limegroup/gnutella/GUID.java
   ***1 in 255 chance of false positive is still too high.  Use two bytes.

core/com/limegroup/gnutella/DownloadManager.java
   ***I'm worried that too many re-queries will be sent for one
      download group.  The assumption is that most of the entries of
      a smart download group will be canonicalized to the same thing.
      Not sure that's the case with the current methodology.
      Imagine "yellow submarine beatles" and "beatles yellow
      submarine".  Or what about "yellow submarine" and "beatles
      yellow submarine".  Should we send the intersection of the sets?
   ***also, if you're going to wait before requerying, why not keep retrying busy hosts as well?
   ***unit tests?
  
core/com/limegroup/gnutella/downloader/ManagedDownloader.java
   ***can't lots of requeries happen if a result comes in that doesn't work?
   ***I'm worried about the code that is similar to TableLine here
 
core/com/limegroup/gnutella/StandardMessageRouter.java
   *** better to just hold reference to DownloadManager than go
       through RS....if it's possible. 
