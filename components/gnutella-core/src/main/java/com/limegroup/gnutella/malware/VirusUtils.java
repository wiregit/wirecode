package com.limegroup.gnutella.malware;

import java.io.File;

import org.limewire.util.CommonUtils;

import com.limegroup.gnutella.util.LimeWireUtils;

public class VirusUtils {
    
    private static class AVGTuple {
        File dir;
        int version;
    }

    static File getInstallationDirectory() {
        // FIXME: don't install into a temporary settings directory
        return new File(CommonUtils.getUserSettingsDir(), "avg");
    }

    static File getVersionFile() {
        return new File(getInstallationDirectory(), "avg-1.0");
    }

    static File getLicenseFile() {
        return new File(getInstallationDirectory(), "license");
    }

    static File getKeyFile() {
        return new File(getInstallationDirectory(), "keys");
    }

    static File getDatabaseDirectory() {
        return new File(getInstallationDirectory(), "database");
    }

    static File getZipFile() {
        if(LimeWireUtils.isTestingVersion()) {
            File home = CommonUtils.getUserHomeDir();
            if(home != null)
                return new File(CommonUtils.getUserHomeDir(), "avg.zip");
        }
        return new File("lib/avg.zip");
    }
    
    static File getLatestDefinitionsDirectory() {
        return getLatestDefinitions().dir;
    }
    
    public static int getLatestDefinitionsVersion() {
        return getLatestDefinitions().version;    
    }

    private static AVGTuple getLatestDefinitions() {
        File parent = getDatabaseDirectory();
        if(parent == null || !parent.exists() || !parent.isDirectory())
            return new AVGTuple();
        AVGTuple tuple = new AVGTuple();
        for(File dir : parent.listFiles()) {
            if(!dir.isDirectory())
                continue;
            String name = dir.getName();
            if(name.startsWith("avgsdk_vdb")) {
                name = name.replace("avgsdk_vdb", "");
            } else if(name.startsWith("avgsdk_ivdb")) {
                name = name.replace("avgsdk_ivdb", "");
            } else {
                continue;
            }
            try {
                int version = Integer.parseInt(name);
                if(version > tuple.version) {
                    tuple.version = version;
                    tuple.dir = dir;
                }
            } catch(NumberFormatException skip) {
                // FIXME LOG
            }
        }
        System.err.println("Latest definitions: " + tuple.version);
        return tuple;
    }
}
