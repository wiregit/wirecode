package com.limegroup.gnutella.malware;

import org.limewire.activation.api.ActivationID;
import org.limewire.activation.api.ActivationManager;
import org.limewire.core.settings.ApplicationSettings;
import org.limewire.core.settings.FilterSettings;
import org.limewire.util.OSUtils;

import com.google.inject.Inject;
import com.limegroup.gnutella.util.LimeWireUtils;

/**
 *Delegate for the settings used by VirusScannerImpl to determine whether or
 * not antivirus is supported and enabled.
 * 
 * THIS SHOULD NOT BE USED EXCEPT BY VirusScannerImpl AND ITS TESTS.
 */
class AntivirusSupportConfigurationImpl implements AntivirusSupportConfiguration {

    private final ActivationManager activationManager;
    
    @Inject
    public AntivirusSupportConfigurationImpl(ActivationManager activationManager) {
        this.activationManager = activationManager;
    }
    
    @Override
    public boolean isAVGCompatibleWindows() {
        return OSUtils.isAVGCompatibleWindows();
    }

    @Override
    public boolean isBetaRelease() {
        return LimeWireUtils.isBetaRelease();
    }

    @Override
    public boolean isAVGModuleEnabled() {
        return activationManager.isActive(ActivationID.AVG_MODULE);
    }

    @Override
    public boolean isTemporaryDirectoryInUse() {
        return LimeWireUtils.isTemporaryDirectoryInUse();
    }

    @Override
    public boolean isTestingVersion() {
        return LimeWireUtils.isTestingVersion();
    }
    
    @Override
    public boolean isVirusScannerEnabledInSettings() {
        return FilterSettings.VIRUS_SCANNER_ENABLED.getValue();
    }

    public boolean isRemoveFromFreeVersion5_5_0() {
        return ApplicationSettings.AVG_REMOVE_FROM_FREE_VERSION_5_5_0.getValue();
    }
    
    @Override
    public boolean isRemoveFromProVersion5_5_0() {
        return ApplicationSettings.AVG_REMOVE_FROM_PRO_VERSION_5_5_0.getValue();
    }

    @Override
    public boolean isTestVirusScanner() {
        return FilterSettings.TEST_VIRUS_SCANNER.getValue();
    }



}