package com.limegroup.gnutella.security;

import java.security.SignatureException;

import org.limewire.security.SignatureVerifier;

public class CertificateVerifierImpl implements CertificateVerifier {

    private static final String
    
    @Override
    public Certificate verify(Certificate certificate) throws SignatureException {
        SignatureVerifier signatureVerifier = new SignatureVerifier(certificate.getSignedPayload(), certificate.getSignature(), SignatureVerifier.readKey(PUBLIC_MASTER_KEY, "DSA"), "DSA");
        if (!signatureVerifier.verifySignature()) {
            throw new SignatureException("Invalid signature for: " + certificate);
        }
        return certificate;
    }

}
