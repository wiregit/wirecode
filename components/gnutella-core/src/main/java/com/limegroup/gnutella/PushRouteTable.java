package com.limegroup.gnutella;

import java.net.*;
import java.io.IOException;
import java.util.*;

/**
 *This data structure keeps track of replies from servants.
 *When a servant replies to a query (meaning she has some data)
 *then we want to store some information about her, in every client on the way.
 *First - The GUID of the reply that was send
 *Second - the connection from which this reply has come in
 *Third - The GUID generated by  host from which this reply has originated
 *Note the third compenent can be obtained from the last 16 bytes 
 *of a standard reply package
 */

public class PushRouteTable{

    //Note when one servant is sending a push request it needs a combination
    //of field one and three to determine the second field.
    // thus in the hashtable I will be storing a concatination of 1+3
        
    private Map hasher ;
    
    public PushRouteTable(int size){
	hasher = new ForgetfulHashMap(size);
    }
    
    /**
     *When a push request comes we want to be able to send out the
     *reques to only the port where the reply came from. Thus we need to know the GUID
     * of the reply and the GUID that was generated my the servant that has the data we need
     *(also the final destination of this request)
     *Thus we use look up based on the Guid and DestinationGuid and return a connection.
     */
    public synchronized Connection get(Message m){
	String ReplyGuid = new String(m.getGUID());
	PushRequest mess = (PushRequest)m;
	String DestinationGuid = new String(mess.getClientGUID());
	String key = ReplyGuid+"|"+ DestinationGuid;
	return (Connection)hasher.get(key);
    }
    
    /**This function is used to store a which connection a particular message came  from
     *It will be used when we have a push request and we want to to find out 
     *which connection to send out a push requst on. See get
     */
    public synchronized void put(Connection c, Message m){
	QueryReply  mes = (QueryReply)m;
	String Guid = new String(m.getGUID());
	String DestinationGuid = new String(mes.getClientGUID());
	String key = Guid+"|"+DestinationGuid;
	hasher.put(key,c);
    }
}

