package com.limegroup.gnutella.malware;

import java.io.File;

import org.jmock.Mockery;
import org.limewire.core.settings.FilterSettings;
import org.limewire.gnutella.tests.LimeTestCase;

public class VirusScannerImplTest extends LimeTestCase {
    private File testFiles = new File("C:/files/test-files/");
       
    @Override
    protected void setUp() throws Exception {
        FilterSettings.TEST_VIRUS_SCANNER.setValue(true);
    }
    
    public void testNonExistantFile() throws Exception {
        Mockery context = new Mockery();
        VirusDefinitionManager virusDefinitionManager = context.mock(VirusDefinitionManager.class);
        VirusScanner virusScanner = new VirusScannerImpl(virusDefinitionManager);
        File testFile = new File(testFiles, "zasdasd.txt");
        assertFalse(testFile.exists());
        assertFalse(virusScanner.isInfected(testFile));
    }
    
    public void testNonInfectedFile() throws Exception {
        Mockery context = new Mockery();
        VirusDefinitionManager virusDefinitionManager = context.mock(VirusDefinitionManager.class);
        VirusScanner virusScanner = new VirusScannerImpl(virusDefinitionManager);
        File testFile = new File(testFiles, "ok1.txt");
        assertTrue(testFile.exists());
        assertFalse(virusScanner.isInfected(testFile));
    }
    
    public void testInfectedFile() throws Exception {
        Mockery context = new Mockery();
        VirusDefinitionManager virusDefinitionManager = context.mock(VirusDefinitionManager.class);
        VirusScanner virusScanner = new VirusScannerImpl(virusDefinitionManager);
        File testFile = new File(testFiles, "eicar.com");
        assertTrue(testFile.exists());
        assertTrue(virusScanner.isInfected(testFile));
    }
}
