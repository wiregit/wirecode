package com.limegroup.gnutella.malware;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.net.URI;

/**
 * Class that can be used to simulate a the VirusDefinitionDownloader by 
 *  intelligently returning a dynamic nfo and redirecting fetches to the appropriate
 *  file already on disk without actually downloading anything.
 */
public class RedirectedVirusDefinitionDownloader extends MockVirusDefinitionDownloader{

    // TODO: Update according to the machine setup
    private static final String updatesLocation = "c:\\avg-updates";
    
    private final String[] nfoEntries;
    private String name;
    
    public RedirectedVirusDefinitionDownloader(String[] nfoEntries) {
        this.nfoEntries = nfoEntries;
    }
    
    @Override
    public void setUriAndName(URI uri, String name) {
            this.name = name;            
    }
    
    @Override
    public void fetch(VirusDefinitionHandler handler, File mementoFile, File mementoBackupFile) {
        if (handler.getClass().getName().indexOf("NFOHandler") > -1) {
            VirusUtils.getDatabaseDirectory().mkdirs();
            File nfoFile = new File(VirusUtils.getDatabaseDirectory(), name);
            try {
                try {
                    BufferedWriter writter = new BufferedWriter(new FileWriter(nfoFile));
                    for ( String entry : nfoEntries ) {
                        writter.write(entry);
                        writter.write('\n');
                    }
                    writter.close();
                } catch (IOException e) {
                    // Ignore, will fail when file is empty
                }
                handler.downloadSucceeded(nfoFile);
            }
            finally {
                nfoFile.delete();             
            }
        } else {
            File updateFile = new File(updatesLocation, name);
            handler.downloadSucceeded(updateFile);    
        }
    }
}
