<project name="Gnutella" default="build tests" basedir="." >

  <!-- set global properties for this basedir -->
  <property name="builddir"    value="build" />
  <property name="messages"    value="com/limegroup/gnutella/messages" /> 
  <property name="util"        value="com/limegroup/gnutella/util" /> 
  <property name="lib"         value="../gui/lib/"/>
  <property name="collections" value="${lib}collections.jar"/>
  <property name="xerces"      value="${lib}xerces.jar"/>
  <property name="junit"       value="${lib}junit.jar"/>
  <property name="jl020"       value="${lib}jl020.jar"/>
  <property name="jl011"       value="${lib}jl011.jar"/>
  <property name="playerlib"   value="${jl011}"/>
  <property name="mp3sp"       value="${lib}mp3sp14.jar"/>
  <property name="ui"          value="${lib}ui.jar"/>
  <property name="mrj"         value="${lib}MRJToolkitStubs.jar"/>
  <property name="mac"         value="${lib}MacStubs.jar"/>
  <property name="quicktime"   value="${lib}QTJava.zip"/>
  <property name="skins"       value="${lib}skinlf.jar"/>
  <property name="coredir"     value="../core/"/>
  <property name="guidir"      value="../gui/"/>
  <property name="settings"    value="${coredir}com/limegroup/gnutella/settings/"/>
  <property name="tests"       value="com/limegroup/gnutella/tests/"/>

  <!-- constants -->
  <property name="DEBUG" value="yes" />
  <property name="OPTIMIZE" value="no" />
  <property name="DEPRECATION" value="yes" />

  <!-- default classpath for javac.  it is set as the user's CLASSPATH
       environment with the jar files necessary for compilation appended. -->
  <path id="default.classpath" >
    <pathelement location="${basedir}" />
    <pathelement location="${coredir}" />
    <pathelement location="${collections}" />
    <pathelement location="${xerces}" />
    <pathelement location="${playerlib}" />
    <pathelement location="${mp3sp}" />
	<pathelement location="${ui}" />
    <pathelement location="${mrj}" />
	<pathelement location="${mac}" />
	<pathelement location="${quicktime}"/>
	<pathelement location="${skins}"/>
	<pathelement location="lib/junit.jar"/>
  </path>

  <!-- Initialization stuff -->
  <target name="init" >
    <!-- we dont do much here right now, but may do later -->
    <tstamp/>
  </target>

  <!-- CLEAN -->
  <target name="clean">
    <delete>
      <fileset dir="${basedir}" includes="**/*.class,*.class" />
    </delete>
  </target>

 <!-- builds all files, including tests, in the project to the specified directory-->
 <target name="build tests">
   <mkdir dir="build"/>
   <javac debug="on" optimize="off" deprecation="on"
	      srcdir="${coredir}:${guidir}:${basedir}"
		  destdir="${builddir}"
		  excludes="${tests}**, ${settings}, **.gif,**.class,**.bat,**.sh,**.jar, **.xml">
     <classpath refid="default.classpath" />
   </javac>
 </target>

  <!-- tests all classes -->
  <target name="test all" depends="build tests">
    <antcall target="test class">
      <param name="class" value="UltrapeerRoutingTest"/>
    </antcall>
    <junit printsummary="withOutAndErr" 
           haltonfailure="yes"
	       showoutput="true"
		   fork="on"
    >
	  <formatter type="plain" useFile="false"/>
	  <test name="com.limegroup.gnutella.AllTests" />
	  <classpath>
	    <pathelement location="${builddir}"/>
	    <pathelement location="${collections}"/>
	    <pathelement location="${xerces}"/>
	  </classpath>
	</junit>
  </target>

  <!-- tests individual class -->
  <target name="test class" if="class" depends="build tests">
    <junit printsummary="withOutAndErr" 
	       haltonfailure="yes"
	       showoutput="true"
		   fork="on"
    >
	  <formatter type="plain" useFile="false"/>
	  <test name="com.limegroup.gnutella.${class}" />
	  <classpath>
	    <pathelement location="${builddir}"/>
	    <pathelement location="${collections}"/>
	    <pathelement location="${xerces}"/>
	  </classpath>
	</junit>
  </target>

  <!-- tests GUESS code -->
  <target name="test guess" depends="build tests">
    <parallel>
	  <antcall target="run server"/>

      <sequential>
        <sleep seconds="5"/>
		<antcall target="test class">
		  <param name="class" value="UDPServiceTest"/>
		</antcall>
      </sequential>

    </parallel>
  </target>

  
  <!-- runs all tests, starting a backend server on 6346 -->  
  <target name="all" depends="build tests">
    <parallel>
	  <antcall target="run server"/>

      <sequential>
        <sleep seconds="10"/>
		<antcall target="test all"/>
      </sequential>
    </parallel>
  </target>

  <!-- runs a backend server on 6346 for testing -->
  <target name="run server" depends="build tests">
	<java classname="com.limegroup.gnutella.Backend"
		  failonerror="true"
	      fork="true"
	>
	  <classpath>
	    <pathelement location="${builddir}"/>
	    <pathelement location="${collections}"/>
		<pathelement location="${xerces}"/>
	    <pathelement location="${skins}"/>
	    <pathelement location="${lib}"/>
	  </classpath>	  
    </java>  
  </target>
</project>
