                          SACHRIFC Algorithm
                          ==================
      (Sergieu and Chris' Flow Control, pronounced "sacrifice")


Steps
+don't reorder OTHER
+basic round-robin implementation 
+add ratios
        -by volume
        -fractional
-add timeouts.  Don't forget to increment drop count.  
        +add for simple buffer.  Test
        -add for BinaryHeap.  Just check time when extractingMax?

        Note: we're currently discarding messages when adding to the queue.
        An alternative is to delete when removing.  Delete-on-add is easier
        to implement because you don't need to get the system time (assume
        that time of the message to add is close enough.)  The problem is
        that there COULD be a long delay between add and remove

+add GUID prioritization (yay heap!)
        +Add priorities to Message
        +Augment RouteTable
        +Use new RouteTable method in MessageRouter
        +Add heap support to MessageQueue
+refactor.  
        +Make OutputRunner smaller.
        +can we use an array of smart object for each priority level?
-optimize:
        -add size INVARIANT (sum of all buffers), changed queued()
        -avoid inner loop for common case ratio
        -locking?
-change GUI to eliminate race condition displaying results.
-cap max throughput, using ThrottledOutputStream.  Perhaps this should be negotiated, i.e.,
  the min A and B's desired bandwidth.
-prioritize by hops for queries.



Name            Preferred Name          Purpose
---------------------------------------------------------------
routeReply          add                     updating push reply route
tryToRouteReply     addConditional          checking duplicate request, updating reply
getReplyhandler                             routing replies
removeReplyHandler                          cleaning up connections


com.limegroup.gnutella.AssertFailure: 
	at com.limegroup.gnutella.Assert.that(Assert.java:22)
	at com.limegroup.gnutella.Assert.that(Assert.java:31)
	at com.limegroup.gnutella.tests.LeafTester.testNoBroadcastFromOld(LeafTester.java:227)
	at com.limegroup.gnutella.tests.LeafTester.main(LeafTester.java:41)
Done
